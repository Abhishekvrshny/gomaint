services:
  # LocalStack for SQS simulation
  localstack:
    image: localstack/localstack:3.0
    container_name: sqs-localstack
    environment:
      - SERVICES=sqs
      - DEBUG=0
      - DEFAULT_REGION=us-east-1
      - FORCE_NONINTERACTIVE=true
      - SKIP_INFRA_DOWNLOADS=1
    ports:
      - "4566:4566"  # LocalStack endpoint
    volumes:
      - localstack_data:/var/lib/localstack
    networks:
      - sqs-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  # etcd for maintenance mode coordination
  etcd:
    image: quay.io/coreos/etcd:v3.5.9
    container_name: sqs-etcd
    environment:
      - ETCD_NAME=etcd0
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd:2380
      - ETCD_INITIAL_CLUSTER=etcd0=http://etcd:2380
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster-1
      - ETCD_INITIAL_CLUSTER_STATE=new
      - ETCD_AUTO_COMPACTION_RETENTION=1
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_HEARTBEAT_INTERVAL=250
      - ETCD_ELECTION_TIMEOUT=1250
    ports:
      - "2399:2379"
      - "2400:2380"
    volumes:
      - sqs_etcd_data:/etcd-data
    networks:
      - sqs-network
    healthcheck:
      test: [ "CMD", "etcdctl", "endpoint", "health" ]
      interval: 30s
      timeout: 20s
      retries: 3

  # SQS Service
  sqs-service:
    build:
      context: ../../
      dockerfile: examples/sqs-service/Dockerfile
    container_name: sqs-service
    environment:
      SQS_QUEUE_URL: "http://localstack:4566/000000000000/test-queue"
      AWS_ENDPOINT: "http://localstack:4566"
      AWS_REGION: "us-east-1"
      ETCD_ENDPOINTS: "etcd:2379"
    ports:
      - "8082:8080"
    networks:
      - sqs-network
    depends_on:
      localstack:
        condition: service_healthy
      etcd:
        condition: service_healthy
    restart: unless-stopped

  # Debug container for queue management and testing  
  queue-debug:
    image: curlimages/curl:latest
    container_name: sqs-queue-debug
    networks:
      - sqs-network
    depends_on:
      localstack:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Queue debug container ready';
        echo 'SQS service will create queues automatically';
        echo 'You can test SQS operations with:';
        echo '  curl -X POST http://localstack:4566/000000000000/test-queue -d Action=SendMessage&MessageBody=TestMessage&Version=2012-11-05';
        tail -f /dev/null
      "

volumes:
  sqs_etcd_data:
    driver: local
  localstack_data:
    driver: local

networks:
  sqs-network:
    driver: bridge